srcdir=		@srcdir@
VPATH=		@srcdir@
prefix=		@prefix@
exec_prefix=	@exec_prefix@
datarootdir=	@datarootdir@
localedir=	@localedir@

CC=		@CC@
RANLIB=		@RANLIB@
CFLAGS=		@CFLAGS@ -I. -Isrc
CPPFLAGS=	@CPPFLAGS@ -I. -Isrc -DLOCALEDIR=\"$(localedir)\"
LDFLAGS=	@LDFLAGS@
LIBS=		@LIBS@

CATALOGS=	de.mo

all:		bas all-po-@USE_NLS@
all-po-no:
all-po-yes:	$(CATALOGS)

bas: src/main.o libbas.a src/getopt.o src/getopt1.o
		$(CC) $^ $(LDFLAGS) $(LIBS) -o $@

src/token.c: src/token.l src/token.h
		flex -i -t src/token.l > $@

libbas.a: src/auto.o src/bas.o src/fs.o src/global.o src/token.o \
        src/program.o src/str.o src/value.o src/var.o
		rm -f $@
		ar cq $@ $^
		@RANLIB@ $@

cppcheck:
		cppcheck $(CPPFLAGS) -q --enable=all src

install-po:	install-po-@USE_NLS@
install-po-no:
install-po-yes:	$(CATALOGS)
		for cat in $(CATALOGS); do \
		  dir=$(localedir)/`basename $$cat .mo`/LC_MESSAGES; \
		  [ -d $$dir ] || @INSTALL@ -m 755 -d $$dir; \
		  @INSTALL@ -m 644 $$cat $$dir/bas.mo; \
		done

check: bas
		for i in test/test*; do ./$$i || break; done

install: all
		@INSTALL@ -m 755 -d @bindir@
		@INSTALL@ bas @bindir@/bas
		@INSTALL@ -m 755 -d @libdir@
		@INSTALL@ -m 644 libbas.a @libdir@/libbas.a
		@RANLIB@ @libdir@/libbas.a
		@INSTALL@ -m 755 -d @mandir@/man1
		@INSTALL@ -m 644 bas.1 @mandir@/man1/bas.1
		make install-po

.c.o:
		$(CC) -c $(CPPFLAGS) $(CFLAGS) $< -o $@

.SUFFIXES:	.po .mo

.po.mo:
		msgfmt -o $@ $<

*.po: bas.pot
		for cat in *.po; do \
		  if msgmerge $$cat bas.pot -o $$cat.tmp; then \
		    mv -f $$cat.tmp $$cat; \
		  else \
		    echo "msgmerge for $$cat failed!"; \
		    rm -f $$cat.tmp; \
		  fi; \
		done

bas.pot: src
		xgettext --add-comments --keyword=_ src/[a-b]*.[ch] src/[e-s]*.[ch] src/v*.[ch] && test -f messages.po && mv messages.po $@

bas.pdf: bas.1
		groff -Tps -t -man bas.1 | ps2pdf - $@

#{{{script}}}#{{{ clean
clean:
		rm -f *.out core src/token.c src/*.o libbas.a *.mo
#}}}
#{{{ distclean
distclean: clean
		rm -rf autom4te.cache bas config.cache config.h config.log config.status configure.lineno Makefile bas.1 test/runbas
#}}}
#{{{ tar
tar: bas.pdf distclean
		(b=`pwd`; b=`basename $$b`; cd ..; tar zcvf $$b.tar.gz $$b/LICENSE $$b/INSTALL $$b/Makefile.in $$b/README $$b/NEWS $$b/configure $$b/install-sh $$b/test $$b/[a-z]*.*)
#}}}
#{{{ dependencies
src/auto.o:	src/auto.c config.h src/auto.h src/programtypes.h src/var.h src/value.h src/str.h src/token.h src/autotypes.h src/program.h
src/bas.o: src/bas.c config.h src/getopt.h src/auto.h src/programtypes.h src/var.h src/value.h src/str.h src/token.h src/autotypes.h src/program.h src/bas.h src/error.h src/fs.h src/global.h src/statement.c src/statement.h
src/fs.o: src/fs.c config.h src/fs.h src/str.h
src/getopt.o: src/getopt.c config.h src/getopt.h
src/getopt1.o: src/getopt1.c config.h src/getopt.h
src/global.o: src/global.c config.h src/auto.h src/programtypes.h src/var.h src/value.h src/str.h src/token.h src/autotypes.h src/program.h src/bas.h src/error.h src/fs.h src/global.h
src/main.o: src/main.c config.h src/getopt.h src/bas.h
src/program.o: src/program.c config.h src/auto.h src/programtypes.h src/var.h src/value.h src/str.h src/token.h src/autotypes.h src/program.h src/error.h src/fs.h
src/statement.o: src/statement.c config.h src/statement.h
src/str.o: src/str.c config.h src/str.h
src/token.o: src/token.c config.h src/auto.h src/programtypes.h src/var.h src/value.h src/str.h src/token.h src/autotypes.h src/program.h src/statement.h
src/value.o: src/value.c config.h src/error.h src/value.h src/str.h
src/var.o: src/var.c config.h src/error.h src/var.h src/value.h src/str.h
#}}}
